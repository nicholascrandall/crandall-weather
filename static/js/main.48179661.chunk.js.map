{"version":3,"sources":["images/forecast.png","images/humidity.png","images/thermometer.png","images/wind.png","components/NavBar.js","components/Weather.js","components/search.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavBar","props","state","className","href","Component","Weather","getWeather","weatherURL","zipCode","apikey","fetch","then","response","json","data","main","setState","forecast","error","process","this","src","alt","name","temperature","temp","wind","speed","humidity","weather","description","Home","handleChange","e","target","value","handleSubmit","event","preventDefault","setZipCode","zipSearched","to","onSubmit","type","placeholder","onChange","App","zip","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48179661.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forecast.b2590e75.png\";","module.exports = __webpack_public_path__ + \"static/media/humidity.00b7d550.png\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.3fe95d75.png\";","module.exports = __webpack_public_path__ + \"static/media/wind.4feb1ea8.png\";","import React, { Component } from 'react'\n\nexport default class NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div className='navBar'>\n                <a href=\"/\" className='navItem' ><h2>Weather</h2></a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport forecast from '../images/forecast.png'\nimport humidity from '../images/humidity.png'\nimport temperature from '../images/thermometer.png'\nimport wind from '../images/wind.png'\n\nexport default class Weather extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apikey: process.env.REACT_APP_API_KEY,\n            zipCode: this.props.zipCode,\n            error: null\n        }\n    }\n\n    getWeather = () => {\n        const weatherURL = `https://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipCode}&appid=${this.state.apikey}&units=imperial`\n        fetch(weatherURL)\n            .then(response => response.json())\n            .then((data) => {\n                if (data.main) {\n                    this.setState({\n                        forecast: data\n                    })\n                }\n            },\n            (error) => {\n                this.setState({\n                    error\n                })\n            }\n        )\n    }\n\n    componentDidMount() {\n        this.getWeather()\n    }\n\n    render() {\n        if (this.state.forecast) {\n            return (\n                <div className=\"forecast\">\n                    <span className=\"sun\">\n                        <img src={forecast} alt=\"forecast\" />\n                        <h1>Forecast for {this.state.forecast.name}</h1>\n                    </span>\n                    <span className=\"temp\">\n                        <img src={temperature} alt=\"temperature\" />\n                        <h3>Temp: {this.state.forecast.main.temp}Â° F</h3>\n                    </span>\n                    <span className=\"wind\">\n                        <img src={wind} alt=\"wind\" />\n                        <h3>Wind: {this.state.forecast.wind.speed} MPH</h3>\n                    </span>\n                    <span className=\"humidity\">\n                        <img src={humidity} alt=\"humidity\" />\n                        <h3>Humidity: {this.state.forecast.main.humidity}%</h3>\n                    </span>\n                    <span className=\"desc\">\n                        <h3>{this.state.forecast.weather[0].description}</h3>\n                    </span>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h3>Temp: </h3>\n                    <h3>Wind: </h3>\n                    <h3>Description: </h3>\n                    <h3>loading...</h3>\n                </div>\n            )\n        }\n    }\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            zipCode: '',\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            zipCode: e.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.setZipCode(this.state.zipCode)\n        this.setState({\n            zipSearched: true\n        })\n    }\n\n    render() {\n        if (this.state.zipSearched) {\n            return <Redirect to=\"/weather\" />\n        }\n        return (\n        <div className=\"searchContainer\">\n            <form onSubmit={this.handleSubmit}>\n                <input\n                type=\"number\"\n                className=\"searchInput\"\n                value={this.state.zipCode}\n                placeholder=\"Enter your Zip Code (USA Only)\"\n                onChange={this.handleChange}\n                />\n            </form>\n        </div>\n        )\n    }\n}","import './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Weather from './components/Weather'\nimport Search from './components/search'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      zipCode: ''\n    }\n  }\n\n  setZipCode = (zip) => {\n    this.setState({\n      zipCode: zip\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            {/* weather show page */}\n            <Route path=\"/weather\">\n              <NavBar />\n              <Search setZipCode={this.setZipCode} />\n              <Weather zipCode = {this.state.zipCode} />\n            </Route>\n\n            {/* HOME PAGE - KEEP AT BOTTOM */}\n            <Route path=\"/\">\n              <NavBar />\n              <Search setZipCode={this.setZipCode} />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}